<?xml version="1.0" encoding="UTF-8"?>
<!-- this version of the typewriter quiz has the original text chnaged but otherwise works the same way -->
<!-- some known bugs are not addressed in this file yet -->
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
    <head>
        <meta charset="UTF-8"/>
        <title>typewriter quiz</title>
        <link rel="preconnect" href="https://fonts.googleapis.com"/>
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin="true"/>
        <link href="https://fonts.googleapis.com/css2?family=Kalam&amp;family=Lato:wght@400;700;900&amp;family=Special+Elite&amp;display=swap" rel="stylesheet"/>
    </head>
    <body>
          <style>
          html {
            font-family: Lato;
          }
          #container {
            max-width: 900px;
            margin: 0 auto;
          }
          figure {
            margin: 0 auto;
          }
          button:not(:disabled), [type="button"]:not(:disabled), [type="reset"]:not(:disabled), [type="submit"]:not(:disabled) {
            cursor: pointer;
          }
          #paper-area {
            width: 100%;
            min-height: 650px;
            display: flex;
            border: 0;
            background-color: #f6fbfe;
            box-shadow: 1px 2px 6px 0 rgba(0,0,0,0.15);
            line-height: 1.5;
          }
          @media only screen and (max-width: 560px) {
            #paper-area {
              display: block;
            }
          }
          #paper-nav {
            margin-top: -1rem;
            margin-left: 1.5rem;
            width: 25%;
            height: 250px;
            box-shadow: 1px 2px 6px 0 rgba(0,0,0,0.15);
            background-color: #fffefc;
            background-image: linear-gradient(rgba(0, 0, 0, 0.025), rgba(255, 255, 255, 0.025));
            @import url('https://fonts.googleapis.com/css2?family=Kalam&amp;display=swap');
            font-family: "Kalam", "Lato";
          }
          @media only screen and (max-width: 700px) {
            #paper-nav {
              height: 300px;
            }
            #paper-nav ul {
              margin-left: -1rem;
            }
          }
          @media only screen and (max-width: 620px) {
            #paper-nav {
              margin-left: 0;
              width: 30%;
            }
          }
          @media only screen and (max-width: 560px) {
            #paper-nav {
              width: 85%;
              margin: 0 auto;
              height: 200px;
            }
            #paper-nav ul {
              display: flex;
              height: 70px;
              flex-flow: column wrap;
              padding-top: 1rem;
            }
          }
          #shape::after {
            width: 11px;
            height: 20px;
            content: " ";
            background: white;
            display: block;
            position: absolute;
            right: 2px;
            top: 5px;
            border-radius: 10px;
            border: 2px solid black;
            border-bottom: 0;
            border-bottom-right-radius: 0;
            border-bottom-left-radius: 0;
          }
          #shape {
            left: 225px;
            top: -20px;
            background: white;
            height: 60px;
            width: 15px;
            border-radius: 10px;
            border: 2px solid black;
            display: inline-block;
            position: relative;
          }
          @media only screen and (max-width: 900px) {
            #shape {
              left: 200px;
            }
          }
          @media only screen and (max-width: 720px) {
            #shape {
              left: 180px;
            }
          }
          @media only screen and (max-width: 600px) {
            #shape {
              left: 150px;
            }
          }
          @media only screen and (max-width: 560px) {
            #shape {
              left: 200px;
              top: -10px;
              position: absolute;
            }
          }
          @media only screen and (max-width: 420px) {
            #shape {
              left: 180px;
            }
          }
          #paper-main {
            width: 75%;
            @import url('https://fonts.googleapis.com/css2?family=Special+Elite&amp;display=swap');
            font-family: "Special Elite", "Courier New", Courier, monospace;
            font-size: 0.95rem;
            line-height: 1.35;
          }
          @media only screen and (max-width: 560px) {
            #paper-main {
              width: 100%;
            }
          }
          .active {
            font-weight: 900;
          }
          .nav-seq {
            list-style: none;
            margin-bottom: 0.5rem;
            cursor: pointer;
            color: #455a7d;
          }
          .grey-link {
            color: grey;
            cursor: default;
          }
          #paper-nav ul {
            margin-top: 1.5rem;
          }
          #paper-nav p {
            margin: 1rem;
          }
          #sequence-form {
            padding: 2rem;
          }
          .seq-fieldset {
            border: none;
          }
          .seq-fieldset legend {
            font-size: 0.95rem;
            margin-bottom: 1rem;
          }
          .seq-fieldset legend::after {
            content: '=========';
            position: relative;
            left: -84px;
            top: 13px;
          }
          .seq-fieldset legend, #log h2 {
            font-size: 0.95rem;
            margin-bottom: 1.5rem;
            margin-top: 3rem;
          }
          #log h2:first-child {
            margin-top: 0;
          }
          .seq-fieldset legend::after, #log h2::after {
            content: '=========';
            position: relative;
            left: -84px;
            top: 13px;
          }
          #log h2::after {
            left: -87px;
          }
          .submit-btn {
            font-size: 1.2rem;
            position: relative;
            left: 400px;
            font-weight: bold;
            padding: 1rem;
            border: unset;
            background: unset;
            border-radius: 30px;
            color: white;
            background-color: #455a7d;
          }
          @media only screen and (max-width: 825px) {
            .submit-btn {
              left: 300px;
            }
          }
          @media only screen and (max-width: 625px) {
            .submit-btn {
              position: unset;
            }
          }
          /* the buttons are not actually disabled for the error message to work */
          .submit-btn-disabled {
            cursor: default !important;
            color: #858585;
            border: unset;
            background: #e8e8e8;
          }
          #error-container {
            position: relative;
            left: 350px;
            color: #a20505;
            width: 250px;
          }
          @media only screen and (max-width: 825px) {
            #error-container {
              left: 200px;
              width: 250px;
            }
          }
          @media only screen and (max-width: 625px) {
            #error-container {
              position: unset;
            }
          }
          #log {
            padding: 2rem 5rem;
            line-height: 2.5 !important;
          }
          .radio-container [type="radio"] {
            border: 0;
            clip: rect(0 0 0 0);
            height: 1px; margin: -1px;
            overflow: hidden;
            padding: 0;
            position: absolute;
            width: 1px;
          }
          .radio-container label {
            cursor: pointer;
          }
          .radio-container [type="radio"] + label:before {
            content: '[\2007]';
            display: inline-block;
            width: 1em;
            height: 1em;
            margin-right: 0.75em;
            transition: 0.5s ease all;
          }
          .radio-container [type="radio"]:checked + label:before {
            content: '[X]';
            /* trying to add a small delay from clicking on the options to the x appearing
            transition: 0.5s border linear;
            animation-delay: 1s; */
          }
          </style>
          <div id="container">
            <div class="" id="paper-area">
              <span id="shape"></span>
              <div class="" id="paper-nav">
                <ul>
                  <li class="nav-seq grey-link" onclick="moveTo()">Sequence 1</li>
                  <li class="nav-seq grey-link" onclick="moveTo()">Sequence 2</li>
                  <li class="nav-seq grey-link" onclick="moveTo()">Sequence 3</li>
                  <li class="nav-seq grey-link" onclick="moveTo()" style="display:none;">placeholder for answers</li>
                </ul>
                <p>You can check (but not edit) submitted sequences.</p>
              </div>
              <div class="" id="paper-main">
                <form id="sequence-form">
                  <!-- the form input name value is entry[0] later and should contain the question as a whole -->
                  <!-- SEQUENCE 1 -->
                  <section class="sequence-container">
                    <fieldset class="seq-fieldset">
                    <legend>Sequence 1</legend>
                    <section class="form-cont form-container-1">
                      <p>This is a multi-level quiz with sections separated into "Sequences". Originally it was for creating a film script based on user choices.</p>
                      <p>My favourite fruit:</p>
                      <div class="radio-container">
                        <div>
                          <input type="radio" id="s1aChoice1" class="s1a" name="My favourite fruit is" value="apple" onclick="radioChanged(this)" autocomplete="off"/>
                          <label for="s1aChoice1">Apple</label>
                        </div>
                        <div>
                          <input type="radio" id="s1aChoice2" class="s1a" name="My favourite fruit is" value="pear" onclick="radioChanged(this)" autocomplete="off"/>
                          <label for="s1aChoice2">Pear</label>
                        </div>
                        <div>
                          <input type="radio" id="s1aChoice3" class="s1a" name="My favourite fruit is" value="strawberry" onclick="radioChanged(this)" autocomplete="off"/>
                          <label for="s1aChoice3">Strawberry</label>
                        </div>
                      </div>
                    </section>
                    <section class="form-cont form-container-1">
                      <p>My favourite vegetable is:</p>
                      <div class="radio-container">
                        <div>
                          <input type="radio" id="s1bChoice1" class="s1b" name="My favourite vegetable is" value="broccoli" onclick="radioChanged(this)" autocomplete="off"/>
                          <label for="s1bChoice1">Broccoli</label>
                        </div>
                        <div>
                          <input type="radio" id="s1bChoice2" class="s1b" name="My favourite vegetable is" value="carrot" onclick="radioChanged(this)" autocomplete="off"/>
                          <label for="s1bChoice2">Carrot</label>
                        </div>
                        <div>
                          <input type="radio" id="s1bChoice3" class="s1b" name="My favourite vegetable is" value="tomato" onclick="radioChanged(this)" autocomplete="off"/>
                          <label for="s1bChoice3">Tomato</label>
                        </div>
                      </div>
                    </section>
                    <section class="form-cont form-container-1">
                      <p>If I had a garden I would grow:</p>
                      <div class="radio-container">
                        <div>
                          <input type="radio" id="s1cChoice1" class="s1c" name="If I had a garden I would grow" value="chili peppers" onclick="radioChanged(this)" autocomplete="off"/>
                          <label for="s1cChoice1">Chili peppers</label>
                        </div>
                        <div>
                          <input type="radio" id="s1cChoice2" class="s1c" name="If I had a garden I would grow" value="lettuce" onclick="radioChanged(this)" autocomplete="off"/>
                          <label for="s1cChoice2">Lettuce</label>
                        </div>
                        <div>
                          <input type="radio" id="s1cChoice3" class="s1c" name="If I had a garden I would grow" value="flowers" onclick="radioChanged(this)" autocomplete="off"/>
                          <label for="s1cChoice3">Flowers</label>
                        </div>
                      </div>
                    </section>
                    </fieldset>
                  </section>
                  <button type="button" class="submit-btn submit-btn-disabled" id="submit1-btn" name="submit-btn" onclick="submit1()">Next ►</button>
                  <!-- SEQUENCE 2 -->
                  <section class="sequence-container">
                    <fieldset class="seq-fieldset">
                    <legend>Sequence 2</legend>
                    <section class="form-cont form-container-2">
                      <p>To me the best kind of pets are:</p>
                      <div class="radio-container">
                        <div>
                          <input type="radio" id="s2aChoice1" class="s2a" name="To me the best kind of pets are" value="dogs" onclick="radioChanged(this)" autocomplete="off"/>
                          <label for="s2aChoice1">Dogs</label>
                        </div>
                        <div>
                          <input type="radio" id="s2aChoice2" class="s2a" name="To me the best kind of pets are" value="cats" onclick="radioChanged(this)" autocomplete="off"/>
                          <label for="s2aChoice2">Cats</label>
                        </div>
                        <div>
                          <input type="radio" id="s2aChoice3" class="s2a" name="To me the best kind of pets are" value="rabbits" onclick="radioChanged(this)" autocomplete="off"/>
                          <label for="s2aChoice3">Rabbits</label>
                        </div>
                      </div>
                    </section>
                    <section class="form-cont form-container-2">
                      <p>However I also like:</p>
                      <div class="radio-container">
                        <div>
                          <input type="radio" id="s2bChoice1" class="s2b" name="However I also like" value="fish" onclick="radioChanged(this)" autocomplete="off"/>
                          <label for="s2bChoice1">Fish</label>
                        </div>
                        <div>
                          <input type="radio" id="s2bChoice2" class="s2b" name="However I also like" value="guinea pigs" onclick="radioChanged(this)" autocomplete="off"/>
                          <label for="s2bChoice2">Guinea pigs</label>
                        </div>
                        <div>
                          <input type="radio" id="s2bChoice3" class="s2b" name="However I also like" value="budgies" onclick="radioChanged(this)" autocomplete="off"/>
                          <label for="s2bChoice3">Budgies</label>
                        </div>
                      </div>
                    </section>
                    <section class="form-cont form-container-2">
                      <p>Out of farm animals my favourite is:</p>
                      <div class="radio-container">
                        <div>
                          <input type="radio" id="s2cChoice1" class="s2c" name="Out of farm animals my favourite is" value="sheep" onclick="radioChanged(this)" autocomplete="off"/>
                          <label for="s2cChoice1">Sheep</label>
                        </div>
                        <div>
                          <input type="radio" id="s2cChoice2" class="s2c" name="Out of farm animals my favourite is" value="cow" onclick="radioChanged(this)" autocomplete="off"/>
                          <label for="s2cChoice2">Cow</label>
                        </div>
                        <div>
                          <input type="radio" id="s2cChoice3" class="s2c" name="Out of farm animals my favourite is" value="horse" onclick="radioChanged(this)" autocomplete="off"/>
                          <label for="s2cChoice3">Horse</label>
                        </div>
                      </div>
                    </section>
                  </fieldset>
                  </section>
                  <button type="button" class="submit-btn submit-btn-disabled" id="submit2-btn" name="submit-btn" onclick="submit2()">Next ►</button>
                  <!-- SEQUENCE 3 -->
                  <section class="sequence-container">
                    <fieldset class="seq-fieldset">
                    <legend>Sequence 3</legend>
                    <section class="form-cont form-container-3">
                      <p>I enjoy travelling by:</p>
                      <div class="radio-container">
                        <div>
                          <input type="radio" id="s3aChoice1" class="s3a" name="I enjoy travelling by" value="car" onclick="radioChanged(this)" autocomplete="off"/>
                          <label for="s3aChoice1">Car</label>
                        </div>
                        <div>
                          <input type="radio" id="s3aChoice2" class="s3a" name="I enjoy travelling by" value="bicycle" onclick="radioChanged(this)" autocomplete="off"/>
                          <label for="s3aChoice2">Bicycle</label>
                        </div>
                        <div>
                          <input type="radio" id="s3aChoice3" class="s3a" name="I enjoy travelling by" value="public transport" onclick="radioChanged(this)" autocomplete="off"/>
                          <label for="s3aChoice3">Public transport</label>
                        </div>
                      </div>
                    </section>
                    <section class="form-cont form-container-3">
                      <p>My only issue with this is that:</p>
                      <div class="radio-container">
                        <div>
                          <input type="radio" id="s3bChoice1" class="s3b" name="My only issue with this is that" value="there's not enough parking" onclick="radioChanged(this)" autocomplete="off"/>
                          <label for="s3bChoice1">There's not enough parking</label>
                        </div>
                        <div>
                          <input type="radio" id="s3bChoice2" class="s3b" name="My only issue with this is that" value="it gets expensive" onclick="radioChanged(this)" autocomplete="off"/>
                          <label for="s3bChoice2">It gets expensive</label>
                        </div>
                        <div>
                          <input type="radio" id="s3bChoice3" class="s3b" name="My only issue with this is that" value="it's easy to get stuck in traffic" onclick="radioChanged(this)" autocomplete="off"/>
                          <label for="s3bChoice3">It's easy to get stuck in traffic</label>
                        </div>
                      </div>
                    </section>
                    <section class="form-cont form-container-3">
                      <p>I wish I could instead:</p>
                      <div class="radio-container">
                        <div>
                          <input type="radio" id="s3cChoice1" class="s3c" name="I wish I could instead" value="simply walk anywhere" onclick="radioChanged(this)" autocomplete="off"/>
                          <label for="s3cChoice1">Simply walk anywhere</label>
                        </div>
                        <div>
                          <input type="radio" id="s3cChoice2" class="s3c" name="I wish I could instead" value="ride a horse in the city" onclick="radioChanged(this)" autocomplete="off"/>
                          <label for="s3cChoice2">Ride a horse in the city</label>
                        </div>
                        <div>
                          <input type="radio" id="s3cChoice3" class="s3c" name="I wish I could instead" value="have my own helicopter" onclick="radioChanged(this)" autocomplete="off"/>
                          <label for="s3cChoice3">Have my own helicopter</label>
                        </div>
                      </div>
                    </section>
                  </fieldset>
                  </section>
                  <button type="button" class="submit-btn submit-btn-disabled" id="submit3-btn" name="submit-btn" onclick="submit3()">See answers</button>
                  <section id="error-container"></section>
                </form>
                <section class="sequence-container">
                  <div id="answer-container">
                    <p id="log"></p>
                  </div>
                </section>
              </div>
            </div>
            <script type="text/javascript">
              let submitBtns = document.getElementsByClassName("submit-btn");
              let submit1Btn = document.getElementById("submit1-btn");
              let submit2Btn = document.getElementById("submit2-btn");
              let submit3Btn = document.getElementById("submit3-btn");
              for (i=0; i &lt; submitBtns.length; i++ ) {
                submitBtns[i].style.display = "none";
              }
              submit1Btn.style.display = "block";
              let seq = document.getElementsByClassName("sequence-container");
              let navSeq = document.getElementsByClassName("nav-seq");
              for (i=0; i &lt; navSeq.length; i++ ) {
                navSeq[i].style.pointerEvents="none";
              }

              // changes the style of the Next buttons
              // default looks disabled
              function radioChanged(radioInput){
                  if (document.querySelector('input[class="s1a"]:checked') &amp;&amp; document.querySelector('input[class="s1b"]:checked') &amp;&amp; document.querySelector('input[class="s1c"]:checked')) {
                    submit1Btn.classList.remove("submit-btn-disabled");
                  }
                  if (document.querySelector('input[class="s2a"]:checked') &amp;&amp; document.querySelector('input[class="s2b"]:checked') &amp;&amp; document.querySelector('input[class="s2c"]:checked')) {
                    submit2Btn.classList.remove("submit-btn-disabled");
                  }
                  if (document.querySelector('input[class="s3a"]:checked') &amp;&amp; document.querySelector('input[class="s3b"]:checked') &amp;&amp; document.querySelector('input[class="s3c"]:checked')) {
                    submit3Btn.classList.remove("submit-btn-disabled");
                  }
              }

              //changing between sequences, for now only with prev/next buttons
              //only the outer for is targeted by this, the one containing the sequences
              let seqIndex = 1;
              showSeq(seqIndex);

              //next/prev button controls
              function plusSequence(n) {
                showSeq(seqIndex += n);
              }

              function showSeq(n) {
                let i;
                if (n &gt; seq.length ) {seqIndex = 1}
                if (n &lt; 1 ) {seqIndex = seq.length}
                for (i=0; i &lt; seq.length; i++ ) {
                  seq[i].style.display = "none";
                }
                for (i = 0; i &lt; seq.length; i++) {
                  navSeq[i].className = navSeq[i].className.replace("active", "");
                }
                seq[seqIndex-1].style.display = "block";
                navSeq[seqIndex-1].className += " active";
              }

              // display form answers
              function submitForm() {
                let form = document.getElementById("sequence-form");
                let log = document.getElementById("log");

                // set the event to click from submit so it can work without a dedicated submit button
                form.addEventListener("click", function(event) {
                  let data = new FormData(form);
                  let output = "";
                  for (const entry of data) {
                    output = output + entry[0] + " " + "&lt;u&gt;" + "&lt;span style='color:#c00000'&gt;" + entry[1] + "&lt;/span&gt;" + "&lt;/u&gt;" + ". ";
                  };
                  log.innerHTML = output;
                  log.innerHTML = log.innerHTML.replace("My favourite fruit", "&lt;h2&gt;Sequence 1&lt;/h2&gt;My favourite fruit").replace("To me the best kind of pets", "&lt;br/&gt;&lt;h2&gt;Sequence 2&lt;/h2&gt;To me the best kind of pets").replace("I enjoy travelling", "&lt;br/&gt;&lt;h2&gt;Sequence 3&lt;/h2&gt;I enjoy travelling");
                  event.preventDefault();
                }, false);
              }

              // generates an error message if the form is not filled
              function errorMessage() {
                let errorCheck = document.querySelector("#error-container p");
                if (errorCheck == null ) {
                  let alertPar = document.createElement("p");
                  alertPar.setAttribute("id","alertPar");
                  let errorCont = document.getElementById("error-container");
                  alertPar.innerText = "Please complete the form";
                  errorCont.appendChild(alertPar);
                }
              }

              // if the error message is on the page and the form is filled remove it
              function removeErrorMessage() {
                let errorCheck = document.querySelector("#error-container p");
                if (errorCheck !== null ) {
                  alertPar.parentNode.removeChild(alertPar);
                }
              }

              // for each sequence
              // if the radio buttons are checked (form is filled) remove the button and add the next sequence's button
              // move to the next sequence
              // disable the radio buttons on the current sequence so that they can't be changed later
              // remove error message if exists
              // if the radio buttons are not checked add error message
              // by default the side nav items are locked, if the form is filled the nav items are progressively unlocked
              // removes grey colour from link if they become active
              function submit1(){
                event.preventDefault();
                if (document.querySelector('input[class="s1a"]:checked') &amp;&amp; document.querySelector('input[class="s1b"]:checked') &amp;&amp; document.querySelector('input[class="s1c"]:checked')) {
                  submit1Btn.style.display = "none";
                  submit2Btn.style.display = "block";
                  plusSequence(1);
                  s1All = document.querySelectorAll('input[class="s1a"],input[class="s1b"],input[class="s1c"]');
                  for (i=0; i &lt; s1All.length; i++ ) {
                    s1All[i].disabled = true;
                  }
                  navSeq[0].style.pointerEvents="";
                  navSeq[1].style.pointerEvents="";
                  navSeq[0].classList.remove("grey-link");
                  navSeq[1].classList.remove("grey-link");
                  removeErrorMessage();
                }
                else {
                  //alert user to fill form
                  errorMessage();
                }
              }

              function submit2(){
                event.preventDefault();
                if (document.querySelector('input[class="s2a"]:checked') &amp;&amp; document.querySelector('input[class="s2b"]:checked') &amp;&amp; document.querySelector('input[class="s2c"]:checked')) {
                  submit2Btn.style.display = "none";
                  submit3Btn.style.display = "block";
                  plusSequence(1);
                  s2All = document.querySelectorAll('input[class="s2a"],input[class="s2b"],input[class="s2c"]');
                  for (i=0; i &lt; s2All.length; i++ ) {
                    s2All[i].disabled = true;
                  }
                  navSeq[2].style.pointerEvents="";
                  navSeq[2].classList.remove("grey-link");
                  removeErrorMessage();
                }
                else {
                  //alert user to fill form
                  errorMessage();
                }
              }

              // if the radio form is set to disable, submitForm() won't consider those answers and nothing will display
              // before the sumitForm() runs all of the form questions need to be re-enabled
              function submit3(){
                event.preventDefault();
                if (document.querySelector('input[class="s3a"]:checked') &amp;&amp; document.querySelector('input[class="s3b"]:checked') &amp;&amp; document.querySelector('input[class="s3c"]:checked')) {
                  submit3Btn.style.display = "none";
                  plusSequence(1);
                  removeErrorMessage();
                  for (i=0; i &lt; s1All.length; i++ ) {
                    s1All[i].disabled = false;
                  }
                  for (i=0; i &lt; s2All.length; i++ ) {
                    s2All[i].disabled = false;
                  }
                  submitForm();
                  paperNav = document.getElementById("paper-nav");
                  paperMain = document.getElementById("paper-main");
                  paperNav.style.display = "none";
                  paperMain.style.width = "100%";
                }
                else {
                  //alert user to fill form
                  errorMessage();
                }
              }

              function moveTo() {
                let seq = document.getElementsByClassName("sequence-container");
                for (i = 0; i &lt; seq.length; i++) {
                  seq[i].style.display = "none";
                  navSeq[i].className = navSeq[i].className.replace("active", "");
                }
                for (i = 0; i &lt; submitBtns.length; i++) {
                  submitBtns[i].style.display = "none";
                }
                if (event.target.innerText=="Sequence 1") {
                  seq[0].style.display = "block";
                  submitBtns[0].style.display = "block";
                  navSeq[0].className += " active";
                } else if (event.target.innerText=="Sequence 2") {
                  seq[1].style.display = "block";
                  submitBtns[1].style.display = "block";
                  navSeq[1].className += " active";
                } else if (event.target.innerText=="Sequence 3") {
                  seq[2].style.display = "block";
                  submitBtns[2].style.display = "block";
                  navSeq[2].className += " active";
                }
              }

            </script>
          </div>
      </body>
</html>
